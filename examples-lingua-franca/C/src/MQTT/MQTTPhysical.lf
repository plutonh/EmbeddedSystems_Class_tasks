/**
 * This program periodically publishes on a topic and, in a different
 * part of the program, subscribes to the same topic. The timestamp at the
 * receiving end will be nondeterministically determined from the local
 * physical clock. The difference between the publisher's logical time
 * and the subscriber's logical time is a reasonable measure of the
 * latency through the MQTT broker. This gives behavior similar to an
 * LF [physical connection](https://www.lf-lang.org/docs/handbook/composing-reactors?target=c#physical-connections).
 * 
 * See README.md for prerequisites and further information.
 * 
 * @author Ravi Akella
 * @author Edward A. Lee
 */
target C {
    cmake-include: [
        "include/paho-extension.cmake", // For #include "MQTTClient.h"
        "include/net_utils.cmake"       // For encode_int64()
    ],
    timeout: 10 secs,
};
  
import MQTTPublisher from "lib/MQTTPublisher.lf";
import MQTTSubscriber from "lib/MQTTSubscriber.lf";
import MessageGenerator, PrintMessage from "lib/MQTTTestReactors.lf";

main reactor {
    pub = new MQTTPublisher(
        topic = "my/test",
        address = "tcp://localhost:1883"
    );
    msg = new MessageGenerator(root = "Hello World");
    msg.message->pub.in;
        
    sub = new MQTTSubscriber(
        address = "tcp://localhost:1883",
        topic = "my/test",
        use_physical_time = true,
        offset = 0
    );
    dsp = new PrintMessage();
    sub.message->dsp.message;
}
